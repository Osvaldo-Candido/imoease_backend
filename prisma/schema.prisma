// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(CLIENT)
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  property Property[] @relation("AgentProperties")
  favorite Favorite[] @relation("UserFavorites")

  @@map("users")
}

model Property {
  id          String         @id @default(uuid())
  title       String
  description String?
  price       Float
  type        PropertyType   @default(HOUSE)
  address     Json // {street, province, municipe}
  features    Json // {bedrooms, bethrooms, area}
  status      PropertyStatus @default(AVALAIBLE)
  listingType ListingType

  postedById String
  postedBy   User       @relation("AgentProperties", fields: [postedById], references: [id])
  favorite   Favorite[] @relation("PropertyFavorites")

  @@map("properties")
}

model Favorite {
  id         String @id @default(uuid())
  userId     String
  propertyId String

  user     User     @relation("UserFavorites", fields: [userId], references: [id])
  property Property @relation("PropertyFavorites", fields: [propertyId], references: [id])

  @@unique([userId, propertyId])
  @@map("favorites")
}

enum UserRole {
  ADMIN
  AGENTE
  CLIENT
}

enum PropertyType {
  HOUSE
  APARTMENT
  COMERCIAL
}

enum PropertyStatus {
  AVALAIBLE
  RENTED
  SOLD
}

enum ListingType {
  RENT
  SALE
}
